function saveReviews(reviews) {
    const reviewsString = JSON.stringify(reviews);
    document.cookie = `reviews=${encodeURIComponent(reviewsString)}; max-age=86400; path=/`; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ 1 –¥–µ–Ω—å
}

function loadReviews() {
    const cookies = document.cookie.split('; ');
    for (const cookie of cookies) {
        const [name, value] = cookie.split('=');
        if (name === "reviews") {
            return JSON.parse(decodeURIComponent(value));
        }
    }
    return [
        { name: "–ï–≥–æ—Ä –ö–æ–ª–≥–∞–Ω–æ–≤", text: "–≠–¢–ò –ù–ê–£–®–ù–ò–ö–ò –ò–ó–ú–ï–ù–ò–õ–ò –ú–û–Æ –ñ–ò–ó–ù–¨! –¢–ï–ü–ï–†–¨ –Ø –ú–û–ì–£ –°–õ–£–®–ê–¢–¨ –ú–£–ó–´–ö–£ –î–ê–ñ–ï –í –î–£–®–ï!" },
        { name: "–≠—Ä–∏–∫ –°–∞—Ä–∫—Å—è–Ω", text: "–Ø –ö–£–ü–ò–õ –ò–•, –ò –¢–ï–ü–ï–†–¨ –í–°–ï –î–ï–í–£–®–ö–ò –•–û–¢–Ø–¢ –°–û –ú–ù–û–ô –ü–û–ó–ù–ê–ö–û–ú–ò–¢–¨–°–Ø!" },
        { name: "–ú–∞—Ä–∏—è –ö–æ–≤–∞–ª–µ–≤–∞", text: "–õ–£–ß–®–ï–ï, –ß–¢–û –°–õ–£–ß–ê–õ–û–°–¨ –°–û –ú–ù–û–ô –ü–û–°–õ–ï –ò–ó–û–ë–†–ï–¢–ï–ù–ò–Ø –ö–û–õ–ï–°–ê!" }
    ];
}

let reviews = loadReviews();

function renderReviews() {
    const reviewGrid = document.getElementById("reviewGrid");
    reviewGrid.innerHTML = "";
    reviews.forEach((review, index) => {
        const reviewElement = document.createElement("div");
        reviewElement.classList.add("review");
        reviewElement.innerHTML = `
            <p>${review.text}</p>
            <span>- ${review.name}</span>
            <button class="delete-btn" data-index="${index}">–£–¥–∞–ª–∏—Ç—å</button>
        `;
        reviewGrid.appendChild(reviewElement);
    });

    const deleteButtons = document.querySelectorAll(".delete-btn");
    deleteButtons.forEach(button => {
        button.addEventListener("click", () => {
            const index = button.getAttribute("data-index");
            deleteReview(index);
        });
    });
}

function deleteReview(index) {
    reviews.splice(index, 1); 
    saveReviews(reviews); 
    renderReviews(); 
}

const reviewForm = document.getElementById("reviewForm");
reviewForm.addEventListener("submit", (e) => {
    e.preventDefault();
    const name = document.getElementById("reviewName").value;
    const text = document.getElementById("reviewText").value;
    if (name && text) {
        reviews.push({ name, text });
        saveReviews(reviews); 
        renderReviews(); 
        reviewForm.reset(); 
    } else {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
    }
});

renderReviews();

const scrollToTopBtn = document.getElementById("scrollToTopBtn");

window.onscroll = function() {
    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
        scrollToTopBtn.style.display = "block";
    } else {
        scrollToTopBtn.style.display = "none";
    }
};

scrollToTopBtn.addEventListener("click", () => {
    window.scrollTo({
        top: 0,
        behavior: "smooth"
    });
});

setTimeout(() => {
    document.getElementById('popup1').style.display = 'block';
}, 5000);

const themeToggleBtn = document.getElementById("themeToggleBtn");

themeToggleBtn.addEventListener("click", () => {
    document.body.classList.toggle("dark-theme");

    if (document.body.classList.contains("dark-theme")) {
        themeToggleBtn.textContent = "‚òÄÔ∏è";
    } else {
        themeToggleBtn.textContent = "üåô";
    }
});